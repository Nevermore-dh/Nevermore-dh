<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS8 安装 docker 和 docker-compose</title>
    <url>/2020/12/06/CentOS8-docker-docker-compose/</url>
    <content><![CDATA[<h4 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a>Docker 安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">### CentOS8 默认是会读取centos.org的mirrorlist的，所以一般来说是不需要配置镜像的。</span></span><br><span class="line"><span class="comment">### (Refer to: https://www.linuxidc.com/Linux/2019-10/161212.htm)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2: 更新 container.io 包, 否则可能会报 `package docker-ce-3:19.03.13-3.el7.x86_64 requires containerd.io &gt;= 1.2.2-3, ...`的错</span></span><br><span class="line"><span class="comment"># 可在 https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/Packages/ 下找最新版安装</span></span><br><span class="line">sudo dnf install -y --allowerasing https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/Packages/containerd.io-1.3.7-3.1.el8.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3: 安装Docker-CE</span></span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 4: 开启Docker服务并设置开机自启</span></span><br><span class="line">sudo systemctl start docker &amp;&amp; sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试, 如输出下图结果则安装成功</span></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><img data-src="https://cdn.nlark.com/yuque/0/2020/png/1602750/1605107017270-3df74cc0-c055-4d5a-a6c4-60c780a46e80.png#align=left&display=inline&height=474&margin=%5Bobject%20Object%5D&name=image.png&originHeight=948&originWidth=874&size=314645&status=done&style=none&width=437" alt="image.png"></p>
<h4 id="Docker-compose-安装"><a href="#Docker-compose-安装" class="headerlink" title="Docker-compose 安装"></a>Docker-compose 安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法一 (Refer to: https://docs.docker.com/compose/install/)</span></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"></span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二 (Refer to: https://docs.docker.com/compose/install/#install-using-pip)</span></span><br><span class="line">sudo pip3 install docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试, 如输出下图结果则安装成功</span></span><br><span class="line">docker-compose --version</span><br><span class="line"><span class="comment"># 输出：docker-compose version 1.27.4, build xxx</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.nlark.com/yuque/0/2020/png/1602750/1605107078432-bdb9228e-2fe6-4393-9265-1e9ee629f537.png#align=left&display=inline&height=87&margin=%5Bobject%20Object%5D&name=image.png&originHeight=174&originWidth=696&size=70897&status=done&style=none&width=348" alt="image.png"></p>
<h4 id="国内镜像配置"><a href="#国内镜像配置" class="headerlink" title="国内镜像配置"></a>国内镜像配置</h4><ul>
<li>编辑 <strong>/etc/docker/daemon.json</strong> 加入下列配置：</li>
</ul>
<p><strong>Notice: **如果有阿里云 **docker hub mirror</strong> 账号的，可以将 <code>https://registry.cn-hangzhou.aliyuncs.com/</code> 替换成自己的 <code>https://&lt;你的ID&gt;.mirror.aliyuncs.com</code> </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://registry.cn-hangzhou.aliyuncs.com/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;http://f1361db2.m.daocloud.io&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.ccs.tencentyun.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>重启 docker<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>


</li>
</ul>
]]></content>
      <categories>
        <category>Docker安装及使用</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>CentOS8</tag>
        <tag>Docker</tag>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 博客搭建</title>
    <url>/2020/12/05/Hexo-blog-init/</url>
    <content><![CDATA[<blockquote>
<p>Update blog init course later</p>
</blockquote>
<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<a id="more"></a>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac Homebrew 国内镜像源替换或重置</title>
    <url>/2020/12/06/Mac-Homebrew-mirror-replace/</url>
    <content><![CDATA[<p><strong>Notice:</strong> <em>本人Mac 系统版本为 Mojave 10.14.5</em></p>
<h4 id="查看当前Homebrew-镜像源"><a href="#查看当前Homebrew-镜像源" class="headerlink" title="查看当前Homebrew 镜像源"></a>查看当前Homebrew 镜像源</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> brew.git镜像源</span></span><br><span class="line">git -C &quot;$(brew --repo)&quot; remote -v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> homebrew-core.git镜像源</span></span><br><span class="line">git -C &quot;$(brew --repo homebrew/core)&quot; remote -v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> homebrew-cask.git镜像源</span></span><br><span class="line">git -C &quot;$(brew --repo homebrew/cask)&quot; remote -v</span><br></pre></td></tr></table></figure>

<h4 id="国内镜像地址"><a href="#国内镜像地址" class="headerlink" title="国内镜像地址"></a>国内镜像地址</h4><ul>
<li>科大: <span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuLw==">https://mirrors.ustc.edu.cn<i class="fa fa-external-link-alt"></i></span></li>
<li>阿里: <span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vaG9tZWJyZXcv">https://mirrors.aliyun.com/homebrew/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a>
<h4 id="以科大为例"><a href="#以科大为例" class="headerlink" title="以科大为例"></a>以科大为例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git -C &quot;$(brew --repo)&quot; remote set-url origin https://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew/core)&quot; remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew/cask)&quot; remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git</span><br><span class="line"></span><br><span class="line">if [ $SHELL = &quot;/bin/bash&quot; ] # 如果你的是bash</span><br><span class="line">then </span><br><span class="line">    echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles/&#x27; &gt;&gt; ~/.bash_profile</span><br><span class="line">    source ~/.bash_profile</span><br><span class="line">elif [ $SHELL = &quot;/bin/zsh&quot; ] # 如果用的shell 是zsh 的话</span><br><span class="line">then</span><br><span class="line">    echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles/&#x27; &gt;&gt; ~/.zshrc</span><br><span class="line">    source ~/.zshrc</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>


<h4 id="恢复原有镜像源"><a href="#恢复原有镜像源" class="headerlink" title="恢复原有镜像源"></a>恢复原有镜像源</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git -C &quot;$(brew --repo)&quot; remote set-url origin https://github.com/Homebrew/brew.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew/core)&quot; remote set-url origin https://github.com/Homebrew/homebrew-core.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew/cask)&quot; remote set-url origin https://github.com/Homebrew/homebrew-cask.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 找到 ~/.bash_profile 或者 ~/.zshrc 中的HOMEBREW_BOTTLE_DOMAIN 一行删除</span></span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>


<h5 id="如果可以了下面的就不用看了"><a href="#如果可以了下面的就不用看了" class="headerlink" title="如果可以了下面的就不用看了"></a>如果可以了下面的就不用看了</h5><h5 id="如果不行的话可以依次尝试以下命令"><a href="#如果不行的话可以依次尝试以下命令" class="headerlink" title="如果不行的话可以依次尝试以下命令"></a>如果不行的话可以依次尝试以下命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew doctor</span><br><span class="line">brew update-reset</span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>


<h4 id="推荐阅读：有趣的-Homebrew-命名"><a href="#推荐阅读：有趣的-Homebrew-命名" class="headerlink" title="推荐阅读：有趣的 Homebrew 命名"></a>推荐阅读：<span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tL25ldmVybW9yZWRoL2Jsb2cvc25ucHRm">有趣的 Homebrew 命名<i class="fa fa-external-link-alt"></i></span></h4><p>以上，Van(完)。</p>
]]></content>
      <categories>
        <category>Mac Homebrew</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>Homebrew</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-compose编排Nginx+PHP74&amp;PHP56+Redis+Memcached环境</title>
    <url>/2020/12/06/docker-compose-dnmp/</url>
    <content><![CDATA[<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>整体目录结构如下， <strong>github</strong> 项目地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL05ldmVybW9yZS1kaC9kb2NrZXItbG5tcA==">docker-lnmp<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── data</span><br><span class="line">│   ├── mysql</span><br><span class="line">│   └── redis</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">├── logs</span><br><span class="line">│   ├── nginx</span><br><span class="line">│   ├── php56</span><br><span class="line">│   └── php74</span><br><span class="line">├── services</span><br><span class="line">│   ├── memcached</span><br><span class="line">│   ├── mysql</span><br><span class="line">│   │   ├── Dockerfile</span><br><span class="line">│   │   ├── conf.d</span><br><span class="line">│   │   │   └── mysql.cnf</span><br><span class="line">│   │   └── my57.cnf</span><br><span class="line">│   ├── nginx</span><br><span class="line">│   │   ├── Dockerfile</span><br><span class="line">│   │   ├── conf.d</span><br><span class="line">│   │   │   ├── cert</span><br><span class="line">│   │   │   │   ├── test.key</span><br><span class="line">│   │   │   │   └── test.pem</span><br><span class="line">│   │   │   ├── rewrite</span><br><span class="line">│   │   │   │   └── rewrite.conf</span><br><span class="line">│   │   │   └── servers</span><br><span class="line">│   │   │       └── www.conf</span><br><span class="line">│   │   ├── fastcgi_params</span><br><span class="line">│   │   └── nginx.conf</span><br><span class="line">│   ├── php56</span><br><span class="line">│   │   ├── Dockerfile</span><br><span class="line">│   │   ├── extensions</span><br><span class="line">│   │   │   ├── imagick-3.4.4.tgz</span><br><span class="line">│   │   │   ├── memcached-2.2.0.tgz</span><br><span class="line">│   │   │   ├── mongodb-1.5.5.tgz</span><br><span class="line">│   │   │   ├── redis-4.1.1.tgz</span><br><span class="line">│   │   │   ├── scws-1.2.3.tar.bz2</span><br><span class="line">│   │   │   ├── swoole-2.0.11.tgz</span><br><span class="line">│   │   │   └── xdebug-2.5.5.tgz</span><br><span class="line">│   │   ├── php-fpm.conf</span><br><span class="line">│   │   └── php.ini</span><br><span class="line">│   ├── php74</span><br><span class="line">│   │   ├── Dockerfile</span><br><span class="line">│   │   ├── Dockerfile.down</span><br><span class="line">│   │   ├── extensions</span><br><span class="line">│   │   │   ├── imagick-3.4.4.tgz</span><br><span class="line">│   │   │   ├── mcrypt-1.0.3.tgz</span><br><span class="line">│   │   │   ├── memcached-3.1.5.tgz</span><br><span class="line">│   │   │   ├── redis-5.3.1.tgz</span><br><span class="line">│   │   │   ├── scws-1.2.3.tar.bz2</span><br><span class="line">│   │   │   ├── swoole-4.5.5.tgz</span><br><span class="line">│   │   │   └── xdebug-2.9.8.tgz</span><br><span class="line">│   │   ├── php-fpm.conf</span><br><span class="line">│   │   └── php.ini</span><br><span class="line">│   └── redis</span><br><span class="line">│       ├── Dockerfile</span><br><span class="line">│       └── redis.conf</span><br><span class="line">└── www</span><br><span class="line">    └── app</span><br><span class="line">        ├── index.php</span><br><span class="line">        └── php56</span><br><span class="line">            └── index.php</span><br></pre></td></tr></table></figure>

<a id="more"></a>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Nevermore-dh/docker-lnmp.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> docker-lnmp</span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>


<h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><ul>
<li><strong>./services/nginx/conf.d/servers/<span class="exturl" data-url="aHR0cDovL3d3dy5jb25mLw==">www.conf<i class="fa fa-external-link-alt"></i></span></strong> 中 <code>fastcgi_pass   l_docker_php74:9000</code> 配置需要和 <strong>PHP</strong> <strong>service</strong> 或者 <strong>container_name</strong> 保持一致</li>
<li><strong>./services/nginx/conf.d/servers/<span class="exturl" data-url="aHR0cDovL3d3dy5jb25mLw==">www.conf<i class="fa fa-external-link-alt"></i></span></strong> 中 <code>location /php56 &#123;...&#125;</code> 配置只是为了验证 <strong>PHP56</strong> 和 <strong>PHP74</strong> 两个版本共存，可根据需要配置自己的规则或者独立的域名</li>
</ul>
<h3 id="PHP-相关扩展安装命令及依赖列表"><a href="#PHP-相关扩展安装命令及依赖列表" class="headerlink" title="PHP 相关扩展安装命令及依赖列表"></a>PHP 相关扩展安装命令及依赖列表</h3><table>
<thead>
<tr>
<th><strong>扩展名</strong></th>
<th><strong>依赖</strong></th>
<th><strong>PHP74 安装方式</strong></th>
<th><strong>PHP56 安装方式</strong></th>
</tr>
</thead>
<tbody><tr>
<td>bcmath</td>
<td>-</td>
<td>docker-php-ext-install bcmath</td>
<td>docker-php-ext-install bcmath</td>
</tr>
<tr>
<td>bz2</td>
<td>apk add bzip2-dev</td>
<td>docker-php-ext-install bz2</td>
<td>docker-php-ext-install bz2</td>
</tr>
<tr>
<td>gd</td>
<td>apk add libpng-dev libjpeg-turbo-dev freetype-dev</td>
<td>docker-php-ext-configure gd –with-freetype –with-jpeg &amp;&amp; docker-php-ext-install  gd</td>
<td>docker-php-ext-configure gd –with-freetype-dir=/usr/include/ –with-jpeg-dir=/usr/include/ &amp;&amp; docker-php-ext-install gd</td>
</tr>
<tr>
<td>gettext</td>
<td>apk add gettext-dev</td>
<td>docker-php-ext-install gettext</td>
<td>docker-php-ext-install gettext</td>
</tr>
<tr>
<td>mcrypt</td>
<td>apk add libmcrypt-dev</td>
<td>pecl install mcrypt-1.0.3.tgz</td>
<td>docker-php-ext-install mcrypt</td>
</tr>
<tr>
<td>memcached</td>
<td>apk add libmemcached-dev zlib-dev</td>
<td>pecl install memcached-3.1.5.tgz</td>
<td>pecl install memcached-2.2.0.tgz</td>
</tr>
<tr>
<td>mysql</td>
<td>-</td>
<td>removed</td>
<td>docker-php-ext-install mysql</td>
</tr>
<tr>
<td>mysqli</td>
<td>-</td>
<td>docker-php-ext-install mysqli</td>
<td>docker-php-ext-install mysqli</td>
</tr>
<tr>
<td>pcntl</td>
<td>-</td>
<td>docker-php-ext-install pcntl</td>
<td>docker-php-ext-install pcntl</td>
</tr>
<tr>
<td>pdo_mysql</td>
<td>-</td>
<td>docker-php-ext-install pdo_mysql</td>
<td>docker-php-ext-install pdo_mysql</td>
</tr>
<tr>
<td>redis</td>
<td>-</td>
<td>详见 Dockerfile</td>
<td>详见 Dockerfile</td>
</tr>
<tr>
<td>scws</td>
<td>-</td>
<td>详见 Dockerfile</td>
<td>详见 Dockerfile</td>
</tr>
<tr>
<td>shmop</td>
<td>-</td>
<td>docker-php-ext-install shmop</td>
<td>docker-php-ext-install shmop</td>
</tr>
<tr>
<td>soap</td>
<td>apk add libxml2-dev</td>
<td>docker-php-ext-install soap</td>
<td>docker-php-ext-install soap</td>
</tr>
<tr>
<td>sockets</td>
<td>-</td>
<td>docker-php-ext-install sockets</td>
<td>docker-php-ext-install sockets</td>
</tr>
<tr>
<td>swoole</td>
<td>-</td>
<td>详见 Dockerfile</td>
<td>详见 Dockerfile</td>
</tr>
<tr>
<td>sysvmsg</td>
<td>-</td>
<td>docker-php-ext-install sysvmsg</td>
<td>docker-php-ext-install sysvmsg</td>
</tr>
<tr>
<td>sysvsem</td>
<td>-</td>
<td>docker-php-ext-install sysvsem</td>
<td>docker-php-ext-install sysvsem</td>
</tr>
<tr>
<td>sysvshm</td>
<td>-</td>
<td>docker-php-ext-install sysvshm</td>
<td>docker-php-ext-install sysvshm</td>
</tr>
<tr>
<td>xmlrpc</td>
<td>apk add libxml2-dev</td>
<td>docker-php-ext-install xmlrpc</td>
<td>docker-php-ext-install xmlrpc</td>
</tr>
<tr>
<td>zip</td>
<td>apk add libzip-dev</td>
<td>docker-php-ext-install zip</td>
<td>docker-php-ext-install zip</td>
</tr>
</tbody></table>
<p>希望本文对你有所帮助，如有不足之处，请不吝赐教～</p>
<p>以上，Van(完)。</p>
]]></content>
      <categories>
        <category>Docker安装及使用</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>docker-compose</tag>
        <tag>DNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>有趣的Homebrew 命名及 keg-only 的意思</title>
    <url>/2020/12/06/funny-homebrew-name-keg-only-mean/</url>
    <content><![CDATA[<p><code>转自</code> <span class="exturl" data-url="aHR0cHM6Ly93aWxkamNydC5waXhuZXQubmV0L2Jsb2cvcG9zdC8yOTE4MjA0NC10aGUtbmFtaW5nLWxvZ2ljLWZyb20taG9tZWJyZXc=">有趣的 Homebrew 命名邏輯-小蟹的Rails心得筆記<i class="fa fa-external-link-alt"></i></span> </p>
<p>首先， <strong>brew</strong> 本身是酿造、酿酒的意思，会用这个字的原因是 <strong>homebrew</strong> 的安装方式为下载 <strong>source code</strong> 回来做编译，由于是在自己电脑做 <strong>local compile</strong> 编译套件，所以这个工具叫做 <strong>homebrew</strong> 自家酿酒。<br>酿酒需要有配方 <strong>formula</strong>，当你需要安装套件时，流程就是下 <strong>brew</strong> 命令去根据配方 <strong>formula</strong>, 酿造出一桶（ <strong>keg</strong>）酒来。所以 <strong>keg</strong> 指的是整个编译完成的套件资料夹。<br>再来，放置套件的位置在 <strong>/usr/local/Cellar/**， **Cellar</strong> 就是地窖，一桶一桶酿好的酒当然要存放在地窖里囖！所以编译安成的套件资料夹 <strong>keg</strong> 预设目录在 <strong>/usr/local/Cellar/**。<br>最后回到「</strong>keg-only<strong>」整个词，字面上意思现在就很清除，表示这个套件只会存放在桶子里，不会跑出桶子外。实际上的行为是 **brew</strong> 不会帮你做 <strong>symlink</strong> 到 <strong>/usr/local</strong>，避免你的原生系统内还有一套 <strong>readline</strong> 而打架，所以提示消息说 <strong>readline</strong> 套件是 <strong>keg-only</strong>。<br>至此，希望你通过上面的解释了解 <strong>Homebrew</strong> 相关有趣的命名～</p>
<p>以上，Van(完)。</p>
]]></content>
      <categories>
        <category>Mac Homebrew</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>Homebrew</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo NexT theme &amp; plugins try</title>
    <url>/2020/12/05/hexo-plugins/</url>
    <content><![CDATA[<blockquote>
<p>Update blog themes and plugins course later</p>
</blockquote>
<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<a id="more"></a>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
</search>
